
name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  
permissions:
  contents: read
  packages: write

jobs:
  # Bloc Lint
  lint_code:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install flake8
      - run: flake8 .
  
  # Bloc Tests
  unit_tests:
    name: Unit Tests 
    runs-on: ubuntu-latest
    needs: [lint_code]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install -r requirements.txt
      - run: pip install pytest 
      - run: pytest

  # Bloc Security
  codeql_analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    needs: [unit_tests]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
          queries: security-extended

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          upload: true
          category: "/language:python"

  
  trivy_scan:
    name: Trivy Scan 
    runs-on: ubuntu-latest
    needs: [unit_tests] 
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t my-app:latest .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: my-app:latest
          format: table
          exit-code: 0
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  
  # Bloc Package

  python_package:
    name: Build Python Package
    runs-on: ubuntu-latest
    needs: [trivy_scan]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build tool
        run: pip install build

      - name: Build wheel package
        run: python -m build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*.whl
    

  docker_build:
    name: Docker Build 
    runs-on: ubuntu-latest
    needs: [codeql_analysis, trivy_scan]
    steps:
      - uses: actions/checkout@v3
      - run: docker build -t superpokedex-web:latest .
  
  docker_push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: [trivy_scan]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set lowercase owner name
        id: vars
        run: echo "owner_lowercase=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ steps.vars.outputs.owner_lowercase }}/superpokedex-web:latest .
          docker push ghcr.io/${{ steps.vars.outputs.owner_lowercase }}/superpokedex-web:latest

          docker rmi ghcr.io/${{ steps.vars.outputs.owner_lowercase }}/superpokedex-web:latest || true



  